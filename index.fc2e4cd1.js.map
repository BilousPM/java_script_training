{"mappings":"AAImF,MAA7EA,EAAM,SAAUC,EAAS,IAE0BC,QAA/CC,IAAIC,MACZF,QAAQC,IAAIF,GAEoB,MAA1BI,MAAEA,EAAKC,MAAEA,EAAKC,MAAEA,EAAKC,MAAEA,GAAUP,EACvCG,KAAKC,MAAQA,EACbD,KAAKE,MAAQA,EACbF,KAAKI,MAAQA,EACbJ,KAAKG,MAAQA,C,EAGfL,QAAQC,IAAIH,EAAIS,WAEhBT,EAAIS,UAAUC,YAAc,SAAUC,GACpCP,KAAKG,MAAQI,C,EAIa,MAAtBC,EAAQ,IAAIZ,EAAI,CAEHK,MAAV,OACPC,MAAO,KACPE,MAAO,MACPD,MAAO,QAGoGL,QAArGC,IAAIS,GAEZ,MAAMC,EAAS,IAAIb,EAAI,CACrBK,MAAO,OACPC,MAAO,OACPE,MAAO,QACPD,MAAO,QAGTM,EAAOH,YAAY,MACnBR,QAAQC,IAAIU,GAEZ,MAAMC,EAAS,IAAId,EAAI,CACrBK,MAAO,OACPC,MAAO,gBACPE,MAAO,YACPD,MAAO,QAGHQ,EAAS,IAAIf,EAEnBE,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,GACZX,QAAQC,IAAIW,GACZZ,QAAQC,IAAIY,GAIZ,MAAMC,EAAa,UAAUC,KAAEA,EAAIC,SAAEA,EAAQC,IAAEA,EAAGC,OAAEA,GAAW,IAC7DhB,KAAKa,KAAOA,EACZb,KAAKc,SAAWA,EAChBd,KAAKe,IAAMA,EACXf,KAAKgB,OAASA,C,EAGhBJ,EAAWP,UAAUY,UAAY,SAAUC,GACzClB,KAAKe,IAAMG,C,EAGb,MAAMC,EAAQ,IAAIP,EAAW,CAC3BC,KAAM,QACNC,SAAU,SACVC,IAAK,GACLC,OAAQ,SAGJI,EAAS,IAAIR,EAAW,CAC5BC,KAAM,SACNC,SAAU,SACVC,IAAK,GACLC,OAAQ,WAGVlB,QAAQC,IAAIoB,GAEZC,EAAOH,UAAU,IACjBnB,QAAQC,IAAIqB,GAGcR,EAAfS,QAAU,SAAUC,GAC7BxB,QAAQC,IAAIuB,E,EAGdxB,QAAQyB,IAAIX,GAEZA,EAAWS,QAAQZ","sources":["src/js/lesson-5/class.js"],"sourcesContent":["//властивість \"prototype\" є тільки у функцій. У обєктів є \"__proto__\"\n// === Class ===\n// Класи прийнято називати з великої літери, а у назві відображати тип об'єкта (іменника), що створюється.\n\nconst Car = function (config = {}) {\n  // this всередині конструктора буде посилатися на новостворений об'єкт\n  console.log(this);\n  console.log(config);\n  //деструктуруєм обєкт параметрів ⬇️\n  const { brand, model, price, color } = config;\n  this.brand = brand;\n  this.model = model;\n  this.color = color;\n  this.price = price;\n  //під час створення нового обєкта в властивості this.__proto__ на обєкт Car.prototype. Тобто Car.prototype - це ПРОТОТИП майбутнього обЄкту (ЕКЗЕМПЛЯРУ)\n};\nconsole.log(Car.prototype);\n\nCar.prototype.changePrise = function (newPrice) {\n  this.price = newPrice;\n};\n\n//створення екземпляру класу ⬇️\nconst myCar = new Car({\n  //це обєкт параметрів\n  brand: 'Audi',\n  model: 'TT',\n  color: 'red',\n  price: 33500,\n});\n// Результат виклику new Car() - це пустий об'єкт, який називається екземпляром класу, тому що містить дані і поведінку, що описуються класом. ⬇️\nconsole.log(myCar);\n\nconst myCar2 = new Car({\n  brand: 'Ford',\n  model: 'F150',\n  color: 'black',\n  price: 42300,\n});\n\nmyCar2.changePrise(55000);\nconsole.log(myCar2);\n\nconst myCar3 = new Car({\n  brand: 'Jeep',\n  model: 'Grand Cerokee',\n  color: 'Dark Blue',\n  price: 55200,\n});\n\nconst myCar4 = new Car();\n\nconsole.log(myCar);\nconsole.log(myCar2);\nconsole.log(myCar3);\nconsole.log(myCar4);\n\n//-----------------------------\n\nconst UsaSitizen = function ({ name, lastname, age, gender } = {}) {\n  this.name = name;\n  this.lastname = lastname;\n  this.age = age;\n  this.gender = gender;\n};\n\nUsaSitizen.prototype.changeAge = function (newAge) {\n  this.age = newAge;\n};\n\nconst petro = new UsaSitizen({\n  name: 'Petro',\n  lastname: 'Bilous',\n  age: 39,\n  gender: 'male',\n});\n\nconst nadiia = new UsaSitizen({\n  name: 'Nadiia',\n  lastname: 'Bilous',\n  age: 35,\n  gender: 'female',\n});\n\nconsole.log(petro);\n\nnadiia.changeAge(35);\nconsole.log(nadiia);\n\n//Статічні властивості і методи ;\nUsaSitizen.loginfo = function (obj) {\n  console.log(obj);\n};\n\nconsole.dir(UsaSitizen);\n\nUsaSitizen.loginfo(myCar2);\n\n//це все також статичні методи;\n// Object.keys();\n// Object.values();\n// Math.max();\n"],"names":["$b83a619ce068e7f7$var$Car","config","console","log","this","brand","model","price","color","prototype","changePrise","newPrice","$b83a619ce068e7f7$var$myCar","$b83a619ce068e7f7$var$myCar2","$b83a619ce068e7f7$var$myCar3","$b83a619ce068e7f7$var$myCar4","$b83a619ce068e7f7$var$UsaSitizen","name","lastname","age","gender","changeAge","newAge","$b83a619ce068e7f7$var$petro","$b83a619ce068e7f7$var$nadiia","loginfo","obj","dir"],"version":3,"file":"index.fc2e4cd1.js.map"}