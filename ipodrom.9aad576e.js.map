{"mappings":"YAAA,IAAAA,EAAe,CACb,cACA,UACA,kBACA,aACA,cCHIC,EAAO,CACXC,QAASC,SAASC,cAAc,gBAChCC,WAAYF,SAASC,cAAc,cACnCE,aAAcH,SAASC,cAAc,gBACrCG,UAAWJ,SAASC,cAAc,8BAGhCI,EAAc,EAYlB,SAASC,EAAIC,GACX,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAkCmBC,EAAKC,EAlClBC,GAkCaF,EAlCQ,IAkCHC,EAlCS,IAmC5BE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAlClDM,YAAW,WACTR,EAAQ,CAAEF,QAAOM,Q,GAChBA,E,IAkBP,SAASK,EAAmBC,GAC1BrB,EAAKK,aAAaiB,YAAcD,C,CAGlC,SAASE,EAAiBF,GACxBrB,EAAKI,WAAWkB,YAAcD,C,CAtChCrB,EAAKC,QAAQuB,iBAAiB,SAC9B,WACE,IAAMC,EAAW1B,EAAO2B,IAAIlB,GAE5Be,EAAiB,IACjBH,EAAmB,6CAcGO,EAbPF,EAcff,QAAQkB,KAAKD,GAAcE,MAAK,SAAAC,G,IAAGrB,EAAKqB,EAALrB,MAAOM,EAAIe,EAAJf,KACxCQ,EAAiB,UAAyBQ,OAAbtB,EAAM,SAAYsB,OAALhB,EAAK,QAoBnD,SAA2Be,G,IAAErB,EAAFqB,EAAErB,MAAOM,EAATe,EAASf,KAAMiB,EAAfF,EAAeG,YAClCC,EAAK,YAA6CH,OAAjCC,EAAY,uBAAgDD,OAA3BtB,EAAM,uBAA0BsB,OAALhB,EAAK,cACxFf,EAAKM,UAAU6B,mBAAmB,YAAaD,E,CApB7CE,CAAkB,CAAE3B,QAAOM,OAAMkB,YAD9B1B,GAAY,G,IAKnB,SAAuBoB,GACrBjB,QAAQ2B,IAAIV,GAAcE,MAAK,WAC7BT,EAAmB,mB,IAtBrBkB,CAAcb,GAYhB,IAAwBE,C","sources":["src/data/horses.js","src/js/lesson-9/ipodrom.js"],"sourcesContent":["export default [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscult',\n];\n","import horses from '../../data/horses';\n\nconst refs = {\n  racebtn: document.querySelector('.js-race-btn'),\n  winnerFild: document.querySelector('.js-winner'),\n  progressFild: document.querySelector('.js-progress'),\n  tabelBody: document.querySelector('.js-results-table > tbody'),\n};\n\nlet raceCounter = 0;\n\nrefs.racebtn.addEventListener('click', hendleStartClick);\nfunction hendleStartClick() {\n  const promises = horses.map(run);\n\n  updateWinnerFild('');\n  updateProgressFild('‚úÖüëâüèª start race, the bid is not accepted');\n  determinWinner(promises);\n  waiteForAllho(promises);\n}\n\nfunction run(horse) {\n  return new Promise((resolve, rekect) => {\n    const time = getRandomTime(3000, 7000);\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nfunction determinWinner(horsesPromis) {\n  Promise.race(horsesPromis).then(({ horse, time }) => {\n    updateWinnerFild(`üéäwinn ${horse} for ${time} ms`);\n    raceCounter += 1;\n    updateResultTable({ horse, time, raceCounter });\n  });\n}\n\nfunction waiteForAllho(horsesPromis) {\n  Promise.all(horsesPromis).then(() => {\n    updateProgressFild('run is complited');\n  });\n}\n\nfunction updateProgressFild(message) {\n  refs.progressFild.textContent = message;\n}\n\nfunction updateWinnerFild(message) {\n  refs.winnerFild.textContent = message;\n}\n\nfunction updateResultTable({ horse, time, raceCounter }) {\n  const tr = `<tr> <td>${raceCounter}</td></tr><tr> <td>${horse}</td></tr><tr> <td>${time}</td></tr>`;\n  refs.tabelBody.insertAdjacentHTML('beforeend', tr);\n}\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n// ====================================================\n// const promises = horses.map(horse => run(horse));\n// or\n// const promises = horses.map(run);\n// ==================================================\n\n// Promise.race([]) - —á–µ–∫–∞—î –≤—ñ–∫–æ–Ω–Ω–∞–Ω–Ω—è —Å–∞–º–æ–≥–æ –±–∏—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ–º—ñ—Å—É. –Ω–∞ —Å–≤–æ—î –º—ñ—Å—Ü–µ –ø–æ–≤–µ—Ä—Ç–∞—î —â–µ –æ–¥–∏–Ω –ø—Ä–æ–º—ñ—Å\n// Promis.all([]) - —á–µ–∫–∞—î –≤–∏–∫–æ–Ω–Ω–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø—Ä–æ–º—ñ—Å—ñ–≤\n\n//  console.log(\n//    '%c ‚úÖüëâüèª start race, the bid is not accepted',\n//    'color: red; font-size: 16px'\n//  );\n\n//  console.log(\n//       `%c üéäwinn ${horse} for ${time} ms`,\n//       'color:teal; font-size: 16px'\n//     )\n\n// console.log(`%c run is complited`, 'color:green; font-size: 16px');\n"],"names":["$7c5f33bd33e8fb04$export$2e2bcd8739ae039","$730891e65f5b65a0$var$refs","racebtn","document","querySelector","winnerFild","progressFild","tabelBody","$730891e65f5b65a0$var$raceCounter","$730891e65f5b65a0$var$run","horse","Promise","resolve","rekect","min","max","time","Math","floor","random","setTimeout","$730891e65f5b65a0$var$updateProgressFild","message","textContent","$730891e65f5b65a0$var$updateWinnerFild","addEventListener","promises","map","horsesPromis","race","then","param","concat","raceCounter1","raceCounter","tr","insertAdjacentHTML","$730891e65f5b65a0$var$updateResultTable","all","$730891e65f5b65a0$var$waiteForAllho"],"version":3,"file":"ipodrom.9aad576e.js.map"}