const promise = new Promise((resolve, reject) => {
  const canFulFill = Math.random() > 0.5;

  setTimeout(() => {
    if (canFulFill) {
      resolve(' –ø—Ä–æ–º—ñ—Å –≤–∏–∫–æ–Ω–∞–≤—Å—è —É—Å–ø—ñ—à–Ω–æ resolve ‚úÖ');
    }
    reject('–ø—Ä–æ–º—ñ—Å –≤–∏–∫–æ–Ω–∞–≤—Å—è –∑ –ø–æ–º–∏–ª–∫–æ—é reject ‚ùå');
  }, 1000);
});

// then(onSucces, onError)
// console.log(promise);

promise.then(
  result => {
    console.log(result, '‚úÖsuccess');
  },
  error => {
    console.log(error, '‚ùå error');
  }
);

// –ª–∞–Ω—Ü—é–∂–æ–∫ –ø—Ä–æ–º—ñ—Å—ñ–≤..

promise
  .then(result => {
    console.log(result);
    return '–ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–æ–º—ñ—Å –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º... ';
  })
  .then(x => {
    console.log(x);
    // throw new Error('–ø–æ–º–∏–ª–∫–∞ –≤ –¥—Ä—É–≥–æ–º—É then');
    return '–∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–æ–º—ñ—Å–∞';
  })
  .then(y => {
    console.log(y);
  })
  .catch(error => {
    console.log(error);
  })
  .finally(() => {
    console.log('üòú‚úÖ–≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –≤ –ª—é–±–æ–º—É –≤–∏–ø–∞–¥–∫—É —Éü§™‚úÖ');
  });

// ------- –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø—Ä–æ–º—ñ—Å—ñ–≤ ---------
// https://pokeapi.co/api/v2/pokemon/

// fetch('https://pokeapi.co/api/v2/pokemon/6')
//   .then(r => r.json())
//   .then(pokemon => console.log(pokemon))
//   .catch(error => {
//     console.log('it is in catch bloc');
//     console.log(error);
//   });

const fetchPokemonById = function (id) {
  return fetch('https://pokeapi.co/api/v2/pokemon/6').then(r => r.json());
};

console.log(fetchPokemonById(3));

fetchPokemonById(6).then(onFetchSuccess).catch(onFetchError);

function onFetchSuccess(pokemon) {
  console.log('–≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ—Éüéä');
  console.log(pokemon);
}

function onFetchError(error) {
  console.log(error);
  console.log('—Ü–µ –≤ –±–ª–æ—Ü—ñ catch');
}

// ================================================
const makePromis = () => {
  return new Promise((resolve, reject) => {
    const passed = Math.random() > 0.5;
    if (passed) {
      resolve('‚úÖ hi, it is resolve');
    }
    reject('‚ùå omg, it is reject');
  });
};

makePromis()
  .then(() => console.log('log resolve ‚úÖ'))
  .catch(() => console.log('catch reject ‚ùå'));
console.log();

console.log('log after pomis');
