// addEventListener('event', callback);
// removeEventListener('event', callback)

const magicBtnRef = document.querySelector('.js-button');
magicBtnRef.addEventListener('click', handleMagicButtonClick);

// –ø–∞—Ç–µ—Ä–Ω–∏ –Ω–µ–π–º—ñ–Ω–≥—É –∫–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ–π
// -handle: hendleEvent or hendleSubjectEvent

function handleMagicButtonClick() {
  console.log('click');
}

// –ø–∞—Ç–µ—Ä–Ω–∏ –Ω–µ–π–º—ñ–Ω–≥—É –∫–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ–π
// -handler: eventHendler or subjectEventHendler
function magicButtonClickHandler() {
  console.log('click');
}

// –ø–∞—Ç–µ—Ä–Ω–∏ –Ω–µ–π–º—ñ–Ω–≥—É –∫–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ–π
// on: on or onSubjectEvent
function onMagicButtonClick(event) {
  console.log('click');
}
// –ø—Ä–∞–∫—Ç–∏–∫–∞ add and remuve
const editEventBtnRef = document.querySelector('button[data-action=edit]');
const addEventBtnRef = document.querySelector('button[data-action=add]');
const removeEventBtnRef = document.querySelector('button[data-action=remove]');

addEventBtnRef.addEventListener('click', event => {
  console.log('adds events listner ');
  editEventBtnRef.addEventListener('click', hendleEditBtnClick);
});

removeEventBtnRef.addEventListener('click', event => {
  console.log('removes events listner');
  editEventBtnRef.removeEventListener('click', hendleEditBtnClick);
});

function hendleEditBtnClick(event) {
  console.log(event);
  console.log('click on edit button');
}

// ---------------------------- –†–û–±–æ—Ç–∞ –∑ —Ñ–æ—Ä–º–æ—é ---------------
const formRef = document.querySelector('.js-register-form');

formRef.addEventListener('submit', hendleFormSubmit);

function hendleFormSubmit(event) {
  event.preventDefault();
  // —Ä–æ–±–æ—Ç–∞ –∑ –æ–∫—Ä–µ–º–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
  // const formElements = event.currentTarget.elements;
  // console.log(formElements.email.value);

  const formData = new FormData(event.currentTarget);
  // —Ä–æ–±–æ—Ç–∞ –∑ –¥–∞–Ω–Ω–∏–º–∏ –≤—Å—ñ—î—ó —Ñ–æ—Ä–º–∏.
  formData.forEach((value, name) => {
    console.log('üöÄ ~ formData.forEach ~ name:', name);
    console.log('üöÄ ~ formData.forEach ~ value:', value);
  });
}

// –ü–∞—Ç–µ—Ä–Ω –æ–±—î–∫—Ç —Å–∏–ª–æ–∫:

const refs = {
  input: document.querySelector('.js-input-name'),
  nameLabel: document.querySelector('.js-span'),
  licens: document.querySelector('.js-checkbox'),
  btn: document.querySelector('.js-btn'),
};

// refs.input.addEventListener('focus', hendleFocusInput);
refs.input.addEventListener('blur', handelBlurInput);
refs.input.addEventListener('change', handelChangeInput);
refs.input.addEventListener('input', handelInputInput);

// function hendleFocusInput() {
//   console.log('This is the input focus');
// }

function handelBlurInput() {
  console.log('This is the input blur');
}

function handelChangeInput(event) {
  //–ø—Ä–∞—Ü—é—î –ø—Ä–∏ –≤—Ç–∞—Ç—ñ —Ñ–æ–∫—É—Å—É
  console.log(event.currentTarget.value);
}

function handelInputInput(event) {
  console.log(event.currentTarget.value);
}

//–ó–∞–¥–∞—á–∫–∞. –ó–∞–º—ñ–Ω–∞ —Ç–µ–∫—Å—Ç—É —Å–ø–∞–Ω—É –Ω–∞ —Ç–µ–∫—Å—Ç –∑ —ñ–Ω–ø—É—Ç—É
refs.input.addEventListener('input', handelInputInputForChangeSpan);
refs.licens.addEventListener('change', handleCangeCheckbox);

function handelInputInputForChangeSpan(event) {
  refs.nameLabel.textContent = event.currentTarget.value;
}

function handleCangeCheckbox(event) {
  console.log(event.currentTarget.checked);
  console.log(refs.btn.disabled);

  refs.btn.disabled = !event.currentTarget.checked;
}

// <!-- –ø–æ–¥—ñ—ó –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ -->

const elements = {
  output: document.querySelector('.js-output'),
  clearBtn: document.querySelector('.js-clear'),
};
// keypress - —Ç—ñ–ª—å–∫–∏ —Ç—ñ, —â–æ –≥–µ–Ω–µ—Ä—É—é—Ç—å —Å–∏–º–≤–æ–ª, (keydown, keyup) - –≤—Å—ñ –∫–ª–∞–≤—ñ—à—ñ
window.addEventListener('keydown', hendleKeydown);
// window.addEventListener('keyup', hendleKeyup);
// window.addEventListener('keypress', hendleKeypress);
elements.clearBtn.addEventListener('click', hendleClickBtn);

function hendleKeypress(event) {
  elements.output.textContent += event.key;
  // console.log('keypress', event);
  // console.log('keypress', event.key);
  // console.log('keypress', event.code);
}
// key –∑–±–µ—Ä–∏–≥–∞—î —Å–∏–º–≤–æ–ª
// code –∑—é–µ—Ä—ñ–≥–∞—î –∫–ª–∞–≤—ñ—à—É

function hendleKeydown(event) {
  console.log('keydown', event.key);
}

function hendleKeyup(event) {
  console.log('keyup', event.key);
}

function hendleClickBtn() {
  elements.output.textContent = '';
}

// –ø–æ–¥—ñ—ó –º–∏—à–∫–∏
// 'mouseenter', 'mouseleave', 'mouseover', 'mouseout','mousemove',
