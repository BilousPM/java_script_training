// // Function declaration
// async function foo() {
//   // ...
// }

// // Functional expression
// const foo = async function () {
//   // ...
// };

// // Arrow function
// const foo = async () => {
//   // ...
// };

// // Object method
// const user = {
//   async foo() {
//     // ...
//   },
// };

// // Class method
// class User {
//   async foo() {
//     // ...
//   }
// }

// (_)(_)(_)(_)(_)(_)(_)(_)(_)(_)(_)(_)(_)(_)(_)(_)

//—Ç  –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∂–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–æ–º—ñ—Å...

function getFruit(name) {
  const fruits = {
    strawberry: 'üçì',
    kiwi: 'ü•ù',
    apple: 'üçè',
    grape: 'üçá',
  };

  return new Promise((resolve, reject) =>
    setTimeout(() => resolve(fruits[name]), 500)
  );
}

async function asyncMakeSmoothie() {
  try {
    // –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–¥—É 1500 ms
    // console.time('asyncMakeSmoothie');
    // const apple = await getFruit('apple');
    // const kiwi = await getFruit('kiwi');
    // const strawberry = await getFruit('strawberry');

    // –ø–∞—Ä–∞–ª–µ–ª—å–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø—Ä–æ–º—ñ—Å—ñ–≤ 500 ms
    console.time('asyncMakeSmoothie');
    const apple = getFruit('apple');
    const kiwi = getFruit('kiwi');
    const strawberry = getFruit('strawberry');
    const fruits = await Promise.all([apple, kiwi, strawberry]);

    return fruits;

    console.timeEnd('asyncMakeSmoothie');
  } catch (error) {
    console.dir(error);
  }
}
asyncMakeSmoothie().then(console.log);
